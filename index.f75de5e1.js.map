{"mappings":"AAAA;AAEA,uBAAuB,GAEvB,2BAA2B;AAC3B,MAAM,WAAW,SAAS,cAAc,CAAC;AACzC,MAAM,gBAAgB,SAAS,cAAc,CAAC;AAC9C,MAAM,YAAY,SAAS,cAAc,CAAC;AAE1C,qDAAqD;AACrD,SAAS,gBAAgB,CAAC,oBAAoB;IAC5C;IAEA,4DAA4D;IAC5D,UAAU,gBAAgB,CAAC,SAAS;AACtC;AAEA,gCAAgC;AAChC,SAAS;IACP,IAAI,SAAS,KAAK,KAAK,IACrB,4CAA4C;IAC5C,OAAO,KAAK,CAAC;SACR;QACL,MAAM,KAAK,SAAS,aAAa,CAAC;QAElC,GAAG,SAAS,CAAC,GAAG,CAAC;QACjB,GAAG,WAAW,GAAG,SAAS,KAAK;QAC/B,cAAc,WAAW,CAAC;QAE1B,MAAM,OAAO,SAAS,aAAa,CAAC;QAEpC,KAAK,SAAS,GAAG,UAAU,kBAAkB;QAC7C,KAAK,SAAS,CAAC,GAAG,CAAC;QACnB,GAAG,WAAW,CAAC;QAEf,sCAAsC;QACtC,SAAS,KAAK,GAAG;QACjB;QAEA,sCAAsC;QACtC,KAAK,OAAO,GAAG;YACb,cAAc,WAAW,CAAC;YAC1B;QACF;QAEA,2CAA2C;QAC3C,GAAG,OAAO,GAAG;YACX,GAAG,SAAS,CAAC,MAAM,CAAC;YACpB;QACF;IACF;AACF;AAEA,mCAAmC;AACnC,SAAS;IACP,IAAI;QACF,mDAAmD;QACnD,aAAa,OAAO,CAAC,QAAQ,cAAc,SAAS;IACtD,EAAE,OAAO,GAAG;QACV,OAAO,KAAK,CAAC,0HAAqC;IACpD;AACF;AAEA,kCAAkC;AAClC,SAAS;IACP,IAAI;QACF,MAAM,YAAY,aAAa,OAAO,CAAC;QAEvC,IAAI,WAAW;YACb,cAAc,SAAS,GAAG;YAE1B,qDAAqD;YACrD,MAAM,QAAQ,cAAc,sBAAsB,CAAC;YAEnD,KAAK,MAAM,QAAQ,MAAO;gBACxB,MAAM,OAAO,KAAK,aAAa,CAAC;gBAEhC,KAAK,OAAO,GAAG;oBACb,cAAc,WAAW,CAAC;oBAC1B;gBACF;gBAEA,KAAK,OAAO,GAAG;oBACb,KAAK,SAAS,CAAC,MAAM,CAAC;oBACtB;gBACF;YACF;QACF;IACF,EAAE,OAAO,GAAG;QACV,OAAO,KAAK,CAAC,oHAAoC;IACnD;AACF","sources":["src/scripts/main.js"],"sourcesContent":["'use strict';\n\n/* global localStorage */\n\n// Получаем элементы из DOM\nconst inputBox = document.getElementById('input-box');\nconst listContainer = document.getElementById('list-container');\nconst addButton = document.getElementById('add-task-btn');\n\n// Загружаем сохранённые данные при загрузке страницы\ndocument.addEventListener('DOMContentLoaded', function() {\n  loadData();\n\n  // Добавляем обработчик событий для кнопки \"Добавить задачу\"\n  addButton.addEventListener('click', addTask);\n});\n\n// Функция для добавления задачи\nfunction addTask() {\n  if (inputBox.value === '') {\n    // Если поле ввода пустое, выводим сообщение\n    window.alert('You have to write something!');\n  } else {\n    const li = document.createElement('li');\n\n    li.classList.add('todo-app__item');\n    li.textContent = inputBox.value;\n    listContainer.appendChild(li);\n\n    const span = document.createElement('span');\n\n    span.innerHTML = '\\u00d7'; // Символ крестика\n    span.classList.add('todo-app__item-remove');\n    li.appendChild(span);\n\n    // Очистка поля ввода после добавления\n    inputBox.value = '';\n    saveData();\n\n    // Удаление задачи по клику на крестик\n    span.onclick = function() {\n      listContainer.removeChild(li);\n      saveData();\n    };\n\n    // Отметка задачи как выполненной при клике\n    li.onclick = function() {\n      li.classList.toggle('todo-app__item--checked');\n      saveData();\n    };\n  }\n}\n\n// Сохранение данных в localStorage\nfunction saveData() {\n  try {\n    // Мы сохраняем только внутреннее содержимое списка\n    localStorage.setItem('data', listContainer.innerHTML);\n  } catch (e) {\n    window.alert('Ошибка сохранения в localStorage:', e);\n  }\n}\n\n// Загрузка данных из localStorage\nfunction loadData() {\n  try {\n    const savedData = localStorage.getItem('data');\n\n    if (savedData) {\n      listContainer.innerHTML = savedData;\n\n      // Восстанавливаем функциональность для каждой задачи\n      const items = listContainer.getElementsByClassName('todo-app__item');\n\n      for (const item of items) {\n        const span = item.querySelector('.todo-app__item-remove');\n\n        span.onclick = function() {\n          listContainer.removeChild(item);\n          saveData();\n        };\n\n        item.onclick = function() {\n          item.classList.toggle('todo-app__item--checked');\n          saveData();\n        };\n      }\n    }\n  } catch (e) {\n    window.alert('Ошибка загрузки из localStorage:', e);\n  }\n}\n"],"names":[],"version":3,"file":"index.f75de5e1.js.map","sourceRoot":"/__parcel_source_root/"}