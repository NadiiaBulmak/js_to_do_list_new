{"mappings":"AAAA;AAEA,uCAAuC;AACvC,MAAM,WAAW,SAAS,cAAc,CAAC;AACzC,MAAM,gBAAgB,SAAS,cAAc,CAAC;AAC9C,MAAM,YAAY,SAAS,cAAc,CAAC;AAE1C,6CAA6C;AAC7C,SAAS,eAAe,IAAI;IAC1B,MAAM,KAAK,SAAS,aAAa,CAAC;IAClC,GAAG,SAAS,CAAC,GAAG,CAAC;IACjB,GAAG,WAAW,GAAG;IAEjB,MAAM,OAAO,SAAS,aAAa,CAAC;IACpC,KAAK,SAAS,GAAG,QAAK,uBAAuB;IAC7C,KAAK,SAAS,CAAC,GAAG,CAAC;IACnB,GAAG,WAAW,CAAC;IAEf,sBAAsB;IACtB,KAAK,gBAAgB,CAAC,SAAS;QAC7B,cAAc,WAAW,CAAC;QAC1B;IACF;IACA,GAAG,gBAAgB,CAAC,SAAS;QAC3B,GAAG,SAAS,CAAC,MAAM,CAAC;QACpB;IACF;IAEA,OAAO;AACT;AAEA,qCAAqC;AACrC,SAAS;IACP,MAAM,aAAa,SAAS,KAAK,CAAC,IAAI;IAEtC,IAAI,eAAe,IAAI;QACrB,MAAM;QACN,QAAQ,0BAA0B;IACpC;IAEA,MAAM,cAAc,eAAe;IACnC,cAAc,WAAW,CAAC;IAC1B,SAAS,KAAK,GAAG,IAAI,wBAAwB;IAC7C;AACF;AAEA,0DAA0D;AAC1D,SAAS;IACP,IAAI;QACF,aAAa,OAAO,CAAC,QAAQ,cAAc,SAAS;IACtD,EAAE,OAAO,OAAO;QACd,MAAM,iCAAiC;IACzC;AACF;AAEA,gDAAgD;AAChD,SAAS;IACP,IAAI;QACF,MAAM,YAAY,aAAa,OAAO,CAAC;QACvC,IAAI,WAAW;YACb,cAAc,SAAS,GAAG;YAE1B,4CAA4C;YAC5C,MAAM,QAAQ,SAAS,gBAAgB,CAAC;YACxC,MAAM,OAAO,CAAC,CAAA;gBACZ,MAAM,eAAe,KAAK,aAAa,CAAC;gBACxC,aAAa,gBAAgB,CAAC,SAAS;oBACrC,cAAc,WAAW,CAAC;oBAC1B;gBACF;gBACA,KAAK,gBAAgB,CAAC,SAAS;oBAC7B,KAAK,SAAS,CAAC,MAAM,CAAC;oBACtB;gBACF;YACF;QACF;IACF,EAAE,OAAO,OAAO;QACd,MAAM,oCAAoC;IAC5C;AACF;AAEA,kBAAkB;AAClB,UAAU,gBAAgB,CAAC,SAAS;AACpC,OAAO,gBAAgB,CAAC,oBAAoB;IAC1C;AACF","sources":["src/scripts/main.js"],"sourcesContent":["'use strict';\n\n// Get references to necessary elements\nconst inputBox = document.getElementById('input-box');\nconst listContainer = document.getElementById('list-container');\nconst addButton = document.getElementById('add-task-btn');\n\n// Function to create a new list item element\nfunction createListItem(text) {\n  const li = document.createElement('li');\n  li.classList.add('todo-app__item');\n  li.textContent = text;\n\n  const span = document.createElement('span');\n  span.innerHTML = 'Ã—'; // Unicode cross symbol\n  span.classList.add('todo-app__item-remove');\n  li.appendChild(span);\n\n  // Add event listeners\n  span.addEventListener('click', () => {\n    listContainer.removeChild(li);\n    saveData();\n  });\n  li.addEventListener('click', () => {\n    li.classList.toggle('todo-app__item--checked');\n    saveData();\n  });\n\n  return li;\n}\n\n// Function to add a task to the list\nfunction addTask() {\n  const inputValue = inputBox.value.trim();\n\n  if (inputValue === '') {\n    alert('You have to write something!');\n    return; // Exit the function early\n  }\n\n  const newListItem = createListItem(inputValue);\n  listContainer.appendChild(newListItem);\n  inputBox.value = ''; // Clear the input field\n  saveData();\n}\n\n// Function to save the current list state to localStorage\nfunction saveData() {\n  try {\n    localStorage.setItem('data', listContainer.innerHTML);\n  } catch (error) {\n    alert('Error saving to localStorage:', error);\n  }\n}\n\n// Function to load saved data from localStorage\nfunction loadData() {\n  try {\n    const savedData = localStorage.getItem('data');\n    if (savedData) {\n      listContainer.innerHTML = savedData;\n\n      // Re-attach event listeners to loaded items\n      const items = document.querySelectorAll('.todo-app__item');\n      items.forEach(item => {\n        const removeButton = item.querySelector('.todo-app__item-remove');\n        removeButton.addEventListener('click', () => {\n          listContainer.removeChild(item);\n          saveData();\n        });\n        item.addEventListener('click', () => {\n          item.classList.toggle('todo-app__item--checked');\n          saveData();\n        });\n      });\n    }\n  } catch (error) {\n    alert('Error loading from localStorage:', error);\n  }\n}\n\n// Event listeners\naddButton.addEventListener('click', addTask);\nwindow.addEventListener('DOMContentLoaded', () => {\n  loadData();\n});"],"names":[],"version":3,"file":"index.f75de5e1.js.map","sourceRoot":"/__parcel_source_root/"}