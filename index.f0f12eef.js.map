{"mappings":"ACGA,MAAM,EAAW,SAAS,cAAc,CAAC,aACnC,EAAgB,SAAS,cAAc,CAAC,kBA4C9C,SAAS,IACP,GAAI,CACF,aAAa,OAAO,CAAC,OAAQ,EAAc,SAAS,CACtD,CAAE,MAAO,EAAO,CACd,MAAM,gCAAiC,EACzC,CACF,CA6BA,AA9EkB,SAAS,cAAc,CAAC,gBA8EhC,gBAAgB,CAAC,QAlD3B,WACE,IAAM,EAAa,EAAS,KAAK,CAAC,IAAI,GAEtC,GAAI,AAAe,KAAf,EAAmB,CACrB,MAAM,gCACN,MACF,CAEA,IAAM,EAAc,AAjCtB,SAAwB,CAAI,EAC1B,IAAM,EAAK,SAAS,aAAa,CAAC,MAClC,EAAG,SAAS,CAAC,GAAG,CAAC,kBACjB,EAAG,WAAW,CAAG,EAGjB,IAAM,EAAO,SAAS,aAAa,CAAC,QAepC,OAdA,EAAK,SAAS,CAAG,IACjB,EAAK,SAAS,CAAC,GAAG,CAAC,yBACnB,EAAG,WAAW,CAAC,GAGf,EAAK,gBAAgB,CAAC,QAAS,KAC7B,EAAc,WAAW,CAAC,GAC1B,GACF,GACA,EAAG,gBAAgB,CAAC,QAAS,KAC3B,EAAG,SAAS,CAAC,MAAM,CAAC,2BACpB,GACF,GAEO,CACT,EAWqC,GACnC,EAAc,WAAW,CAAC,GAC1B,EAAS,KAAK,CAAG,GACjB,GACF,GAuCA,OAAO,gBAAgB,CAAC,mBAAoB,MAC1C,AA5BF,WACE,GAAI,CACF,IAAM,EAAY,aAAa,OAAO,CAAC,QACnC,IACF,EAAc,SAAS,CAAG,EAI1B,AADc,SAAS,gBAAgB,CAAC,mBAClC,OAAO,CAAC,AAAA,IAEZ,AADqB,EAAK,aAAa,CAAC,0BAC3B,gBAAgB,CAAC,QAAS,KACrC,EAAc,WAAW,CAAC,GAC1B,GACF,GACA,EAAK,gBAAgB,CAAC,QAAS,KAC7B,EAAK,SAAS,CAAC,MAAM,CAAC,2BACtB,GACF,EACF,GAEJ,CAAE,MAAO,EAAO,CACd,MAAM,mCAAoC,EAC5C,CACF,GAMA","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["'use strict';\n// Get references to necessary elements\nconst inputBox = document.getElementById('input-box');\nconst listContainer = document.getElementById('list-container');\nconst addButton = document.getElementById('add-task-btn');\n// Function to create a new list item element\nfunction createListItem(text) {\n    const li = document.createElement('li');\n    li.classList.add('todo-app__item');\n    li.textContent = text;\n    const span = document.createElement('span');\n    span.innerHTML = \"\\xd7\"; // Unicode cross symbol\n    span.classList.add('todo-app__item-remove');\n    li.appendChild(span);\n    // Add event listeners\n    span.addEventListener('click', ()=>{\n        listContainer.removeChild(li);\n        saveData();\n    });\n    li.addEventListener('click', ()=>{\n        li.classList.toggle('todo-app__item--checked');\n        saveData();\n    });\n    return li;\n}\n// Function to add a task to the list\nfunction addTask() {\n    const inputValue = inputBox.value.trim();\n    if (inputValue === '') {\n        alert('You have to write something!');\n        return; // Exit the function early\n    }\n    const newListItem = createListItem(inputValue);\n    listContainer.appendChild(newListItem);\n    inputBox.value = ''; // Clear the input field\n    saveData();\n}\n// Function to save the current list state to localStorage\nfunction saveData() {\n    try {\n        localStorage.setItem('data', listContainer.innerHTML);\n    } catch (error) {\n        alert('Error saving to localStorage:', error);\n    }\n}\n// Function to load saved data from localStorage\nfunction loadData() {\n    try {\n        const savedData = localStorage.getItem('data');\n        if (savedData) {\n            listContainer.innerHTML = savedData;\n            // Re-attach event listeners to loaded items\n            const items = document.querySelectorAll('.todo-app__item');\n            items.forEach((item)=>{\n                const removeButton = item.querySelector('.todo-app__item-remove');\n                removeButton.addEventListener('click', ()=>{\n                    listContainer.removeChild(item);\n                    saveData();\n                });\n                item.addEventListener('click', ()=>{\n                    item.classList.toggle('todo-app__item--checked');\n                    saveData();\n                });\n            });\n        }\n    } catch (error) {\n        alert('Error loading from localStorage:', error);\n    }\n}\n// Event listeners\naddButton.addEventListener('click', addTask);\nwindow.addEventListener('DOMContentLoaded', ()=>{\n    loadData();\n});\n\n//# sourceMappingURL=index.f0f12eef.js.map\n","'use strict';\n\n// Get references to necessary elements\nconst inputBox = document.getElementById('input-box');\nconst listContainer = document.getElementById('list-container');\nconst addButton = document.getElementById('add-task-btn');\n\n// Function to create a new list item element\nfunction createListItem(text) {\n  const li = document.createElement('li');\n  li.classList.add('todo-app__item');\n  li.textContent = text;\n\n  \n  const span = document.createElement('span');\n  span.innerHTML = 'Ã—'; // Unicode cross symbol\n  span.classList.add('todo-app__item-remove');\n  li.appendChild(span);\n\n  // Add event listeners\n  span.addEventListener('click', () => {\n    listContainer.removeChild(li);\n    saveData();\n  });\n  li.addEventListener('click', () => {\n    li.classList.toggle('todo-app__item--checked');\n    saveData();\n  });\n\n  return li;\n}\n\n// Function to add a task to the list\nfunction addTask() {\n  const inputValue = inputBox.value.trim();\n\n  if (inputValue === '') {\n    alert('You have to write something!');\n    return; // Exit the function early\n  }\n\n  const newListItem = createListItem(inputValue);\n  listContainer.appendChild(newListItem);\n  inputBox.value = ''; // Clear the input field\n  saveData();\n}\n\n// Function to save the current list state to localStorage\nfunction saveData() {\n  try {\n    localStorage.setItem('data', listContainer.innerHTML);\n  } catch (error) {\n    alert('Error saving to localStorage:', error);\n  }\n}\n\n// Function to load saved data from localStorage\nfunction loadData() {\n  try {\n    const savedData = localStorage.getItem('data');\n    if (savedData) {\n      listContainer.innerHTML = savedData;\n\n      // Re-attach event listeners to loaded items\n      const items = document.querySelectorAll('.todo-app__item');\n      items.forEach(item => {\n        const removeButton = item.querySelector('.todo-app__item-remove');\n        removeButton.addEventListener('click', () => {\n          listContainer.removeChild(item);\n          saveData();\n        });\n        item.addEventListener('click', () => {\n          item.classList.toggle('todo-app__item--checked');\n          saveData();\n        });\n      });\n    }\n  } catch (error) {\n    alert('Error loading from localStorage:', error);\n  }\n}\n\n// Event listeners\naddButton.addEventListener('click', addTask);\nwindow.addEventListener('DOMContentLoaded', () => {\n  loadData();\n});"],"names":["inputBox","document","getElementById","listContainer","saveData","localStorage","setItem","innerHTML","error","alert","addButton","addEventListener","inputValue","value","trim","newListItem","createListItem","text","li","createElement","classList","add","textContent","span","appendChild","removeChild","toggle","window","loadData","savedData","getItem","items","querySelectorAll","forEach","item","removeButton","querySelector"],"version":3,"file":"index.f0f12eef.js.map"}